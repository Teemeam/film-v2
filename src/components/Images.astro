---
import encodeImage from '../lib/encodeImage';
import getTags from '../lib/getTags';
import formatDescription from '../lib/formatDescription';
import timestampToDate from '../lib/timestampToDate';
import groupDataByMonth from '../lib/groupDataByMonth';

/* Components */
import { Images as ImagesComponent } from './Images';

const { data } = Astro.props;

const formattedData: FormattedData[] = [];

await Promise.all(
  data.map(async (dataItem: CompleteData) => {
    const urlBase = `https://live.staticflickr.com/${dataItem.photo.server}/${dataItem.photo.id}_${dataItem.photo.originalsecret}`;
    const url = `${urlBase}_k.jpg`;
    const blurhash = await encodeImage(`${urlBase}_t.jpg`);

    formattedData.push({
      id: dataItem.photo.id,
      url: url,
      blurhash: blurhash.encoded,
      tags: getTags(dataItem.photo.tags),
      description: formatDescription(dataItem.photo.description._content),
      aspectRatio: dataItem.aspectRatio,
      timestamp: dataItem.photo.dateuploaded,
      dateLabel: timestampToDate(dataItem.photo.dateuploaded),
      flickrUrl: dataItem.photo.urls.url[0]!._content,
    });
  })
);

/**
 * Sort formatted data by timestamp
 */
formattedData.sort((a, b) => b.timestamp.localeCompare(a.timestamp, 'en-US'));

/**
 * Group data by date label
 */
const groupedData: FormattedData[][] = groupDataByMonth(formattedData);
---

<ImagesComponent client:load data={groupedData} />
