---
import credentials from '../lib/credentials';
import { getOriginalWidth, getOriginalHeight } from '../lib/getOriginalDimensions';

/* Layouts */
import Layout from '../layouts/Layout.astro';

/* Components */
import Header from '../components/Header';
import Images from '../components/Images.astro';
import Test from '../components/Test';

/**
 * Fetch data
 */
const response = await fetch(
  `https://www.flickr.com/services/rest/?method=flickr.photosets.getPhotos&api_key=${credentials.app_key}&photoset_id=${credentials.photoset_id}&user_id=${credentials.user_id}&format=json&nojsoncallback=1`
);

const data: Data = await response.json();

const photos: Photo[] = data.photoset.photo;

const completeData: CompleteData[] = [];

await Promise.all(
  photos.map(async (photo: Photo) => {
    /**
     * Fetch info
     */
    const infoResponse = await fetch(
      `https://www.flickr.com/services/rest/?method=flickr.photos.getInfo&api_key=${credentials.app_key}&photo_id=${photo.id}&format=json&nojsoncallback=1`
    );
    const infoData: InfoData = await infoResponse.json();

    /**
     * Fetch sizes
     */
    const sizeResponse = await fetch(
      `https://www.flickr.com/services/rest/?method=flickr.photos.getSizes&api_key=${credentials.app_key}&photo_id=${photo.id}&format=json&nojsoncallback=1`
    );
    const sizeData: SizeData = await sizeResponse.json();

    const sizes: Size[] = sizeData.sizes.size;

    /**
     * Complete data
     */
    const width = getOriginalWidth(sizes);
    const height = getOriginalHeight(sizes);

    const data: CompleteData = {
      ...infoData,
      aspectRatio: typeof width === 'number' && typeof height === 'number' ? width / height : 1,
    };

    completeData.push(data);
  })
);
---

<Layout title='FILM-V2'>
  <main>
    <Header />
    <Images data={completeData} />
    <Test client:load data={completeData} />
  </main>
</Layout>
